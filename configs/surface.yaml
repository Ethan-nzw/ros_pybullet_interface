file_name: '/objects/surface.obj'

# Basic parameters
mesh_scale: [0.0015,0.0015,0.0015]
rgba_color: [0.5, 0.5, 0.2, 1]
base_mass: 0.0

# Dynamic parameters
lateral_friction: 1.0
spinning_friction: 0.5
rolling_friction: 0.5
restitution: 0.5
linear_damping: 0.04
angular_damping: 0.04
contact_stiffness: 2000.0
contact_damping: 0.7

link_state:

  # Specifying the link state
  #
  # You can set the collision object to be static or dynamic.
  #
  # state collision object
  #   You must specify here a position attribute and orientation attribute.
  #
  # dynamic object
  #
  #   You must specify an attribute tf_frame_id. The position/orientation of the
  #   collision object in PyBullet will be updated according to the
  #   position/orientation of the respective tf frame. In ROS, you must ensure
  #   that this frame can be defined wrt the PyBullet world frame. The PyBullet
  #   world frame is called 'ros_pybullet_interface/world'.
  #

  # position: [0., -0.2, -0.05]
  position: [0.3, 0., 0.9]
  orientation_mat: [[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]
